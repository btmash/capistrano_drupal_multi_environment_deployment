load 'deploy'
# Uncomment if you are using Rails' asset pipeline
    # load 'deploy/assets'
Dir['vendor/gems/*/recipes/*.rb','vendor/plugins/*/recipes/*.rb'].each { |plugin| load(plugin) }
load 'config/deploy' # remove this line to skip loading any of the default tasks

namespace :deploy do
	desc "Symlink shared configs and folders on each release. Remove whatever version is currently there."
	task :create_symlinks do
		shared_assets.each do |symlink_asset|
			namespace :"#{symlink_asset}" do
				run "rm -rf #{release_path}/#{symlink_asset}"
				run "ln -nfs #{shared_path}/#{application}/#{symlink_asset} #{release_path}/#{symlink_asset}"
			end
		end
	end

	desc "Overrides rake migration"
	task :migrate do
		run "echo \"Override migration\""
	end

	desc "Upgrades application."
	task :upgrade_application, :roles => :master do
		# run "drush @#{stage} rr"
		run "drush @#{stage} updb -y"
		run "drush @#{stage} cc all"
	end

	desc "Restart server tasks."
	task :restart do
		run "#{sudo} /etc/init.d/php5-fpm restart"
		run "#{sudo} /etc/init.d/nginx restart"
	end
end

namespace :drupal do
	desc "Clear cache"
	task :clear_cache, :roles => :master do
		# run "drush @#{stage} rr"
		run "drush @#{stage} cc all"
	end

	desc "Run updates"
	task :run_updates, :roles => :master do
		# run "drush @#{stage} rr"
		run "drush -y @#{stage} updb"
		run "drush @#{stage} cc all"
	end

	task :db_sync, :roles => :master do
		destination_environment = variables[:destination_environment] || "#{destination_environment}"
		run "drush sql-sync @#{stage} @#{destination_environment} -y"
	end
	
	task :touch_file, :roles => :master do
		filepath = variables[:filepath] || "~/capistrano_default"
		run "touch #{filepath}"
	end

	task :file_sync, :roles => :master do
		destination_environment = variables[:destination_environment] || "#{destination_environment}"
		run "drush -y rsync @#{stage}:%files @#{destination_environment}:%files"
		run "drush -y rsync @#{stage}:%private_files @#{destination_environment}:%private_files"
	end

	task :cache_content, :roles => :master do
		run "drush --yes dl drush_ecl"
		run "drush @#{stage} ecl"
	end

	task :run_cron, :roles => :master do
		run "drush @#{stage} core-cron"
		run "drush --yes dl drush_ecl"
		run "drush @#{stage} ecl"
	end

	task :create_archive, :roles => :master do
		require 'securerandom'
		release_secure = SecureRandom.hex(20)
		run "echo #{release_secure}"
		run "mkdir -p #{shared_path}/#{application}/#{archive_dir}"
		run "drush -y @#{stage} archive-dump @sites --destination=#{shared_path}/#{application}/#{archive_dir}/#{release_secure}.tar --tar-options=\"--exclude=.git --exclude=#{archive_dir}\""
		run "drush -y @#{stage} sql-dump | gzip > #{shared_path}/#{application}/#{archive_dir}/#{release_secure}.sql.gz"
		run "ls -rt #{shared_path}/#{application}/#{archive_dir}/*.tar | head -n -5 | xargs rm --force"
		run "ls -rt #{shared_path}/#{application}/#{archive_dir}/*.sql.gz | head -n -5 | xargs rm --force"
		print "Site archive file (code, files, db) can now be downloaded at http://#{domain}/#{archive_dir}/#{release_secure}.tar\n"
		print "Site db archive file can now be downloaded at http://#{domain}/#{archive_dir}/#{release_secure}.sql.gz\n"
	end
end

namespace :mysql do
	desc "Create a db dump"
	task :create_capistrano_db_dump, :roles => :master do
		# run "drush @#{stage} cc all"
		run "mkdir -p #{shared_path}/db_backup"
		run "drush @#{stage} sql-dump > #{shared_path}/db_backup/#{application}.sql"
	end

	task :rollback_db, :roles => :master do
		run "drush @#{stage} --yes sql-drop"
		run "drush @#{stage} sqlc < #{shared_path}/db_backup/#{application}.sql"
	end
end

desc 'Backup the database.'
before 'deploy:update', 'mysql:create_capistrano_db_dump'

desc 'Share the sites base.'
after 'deploy:create_symlink', 'deploy:create_symlinks'

desc 'Update the schema if necessary.'
after 'deploy:update', 'deploy:upgrade_application'

desc 'Perform cleanup'
after 'deploy:update', 'deploy:cleanup'

desc 'Rollback to last backed up database.'
after 'deploy:rollback', 'mysql:rollback_db'

